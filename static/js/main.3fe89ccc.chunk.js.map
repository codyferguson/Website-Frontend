{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","href","url","className","id","title","Component","Footer","About","profilepic","image","bio","state","email","resumeDownload","resumedownload","src","alt","target","rel","Resume","skillmessage","education","school","degree","graduated","work","company","years","techs","techImage","ReactGA","initialize","App","foo","resumeData","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3fe89ccc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var occupation= this.props.data.occupation;\n      var description= this.props.data.description;\n      var city= this.props.data.address.city;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n      <nav id=\"nav-wrap\">\n\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\"> {name}</h1>\n            <h3>I'm a {city} based <span>{occupation}</span>. {description}.</h3>\n            <hr />\n            <ul className=\"social\">\n               {networks}\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2021 Cody Ferguson</li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var profilepic = \"images/\" + this.props.data.image;\n      var bio = this.props.data.bio;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var email = this.props.data.email;\n      var resumeDownload = this.props.data.resumedownload;\n    }\n\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img\n              className=\"profile-pic\"\n              src={profilepic}\n              alt=\"Cody Ferguson Profile Pic\"\n            />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n\n            <p>{bio}</p>\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{name}</span>\n                  <br />\n                  <span>\n                    {city} , {state}\n                  </span>\n                  <br />\n                  <span>{email}</span>\n                </p>\n              </div>\n              <div className=\"columns download\">\n                <p>\n                  <a href={resumeDownload} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button\">\n                    <i className=\"fa fa-download\"></i>Download Resume\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Resume extends Component {\n  render() {\n    if (this.props.data) {\n      var skillmessage = this.props.data.skillmessage;\n      var education = this.props.data.education.map(function (education) {\n        return (\n          <div key={education.school}>\n            <h3>{education.school}</h3>\n            <p className=\"info\">\n              {education.degree} <span>&bull;</span>\n              <em className=\"date\">{education.graduated}</em>\n            </p>\n            <p>{education.description}</p>\n          </div>\n        );\n      });\n      var work = this.props.data.work.map(function (work) {\n        return (\n          <div key={work.company}>\n            <h3>{work.company}</h3>\n            <p className=\"info\">\n              {work.title}\n              <span>&bull;</span> <em className=\"date\">{work.years}</em>\n            </p>\n            <p>{work.description}</p>\n          </div>\n        );\n      });\n      var techs = this.props.data.techs.map(function (techs) {\n        var techImage = 'images/tech/' + techs.image;\n        return (\n          <div key={techs.name} className=\"columns feature-item\">\n              <img className=\"tech\" alt={techs.name} src={techImage}/>\n              <h5>{techs.name}</h5>\n              <p>{techs.description}</p>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n              <div className=\"twelve columns\">{education}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">{work}</div>\n        </div>\n\n        <div className=\"row tech\">\n          <div className=\"three columns header-col\">\n            <h1><span>Technology</span></h1>\n          </div>\n\n          <div>\n            \n              <div className=\"nine columns main-col\">\n                <p className=\"lead center\">{skillmessage}</p>\n              </div>\n              <ul className=\"bgrid-quarters s-bgrid-thirds cf\">\n                {techs}\n              </ul>\n          </div>\n          \n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Resume from './Components/Resume';\nimport reportWebVitals from './reportWebVitals';\nimport ReactGA from 'react-ga';\n\nconst TRACKING_ID = \"UA-12341234-1\"; // YOUR_OWN_TRACKING_ID\n  ReactGA.initialize(TRACKING_ID);\n  \nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}